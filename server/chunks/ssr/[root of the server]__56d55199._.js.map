{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 215, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/google-adsense-policy-checker.ts"],"sourcesContent":["// use server'\n'use server';\n\n/**\n * @fileOverview A tool to check if content adheres to Google AdSense policies.\n *\n * - googleAdsensePolicyChecker - A function that checks content against Google AdSense policies.\n * - GoogleAdsensePolicyCheckerInput - The input type for the googleAdsensePolicyChecker function.\n * - GoogleAdsensePolicyCheckerOutput - The return type for the googleAdsensePolicyChecker function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst GoogleAdsensePolicyCheckerInputSchema = z.object({\n  content: z\n    .string()\n    .describe('The content to check against Google AdSense policies.'),\n});\nexport type GoogleAdsensePolicyCheckerInput = z.infer<\n  typeof GoogleAdsensePolicyCheckerInputSchema\n>;\n\nconst GoogleAdsensePolicyCheckerOutputSchema = z.object({\n  adherence: z\n    .boolean()\n    .describe(\n      'Whether the content adheres to Google AdSense content policies.'\n    ),\n  reasoning: z\n    .string()\n    .describe(\n      'The reasoning behind the adherence determination, referencing specific Google AdSense policies.'\n    ),\n});\nexport type GoogleAdsensePolicyCheckerOutput = z.infer<\n  typeof GoogleAdsensePolicyCheckerOutputSchema\n>;\n\nexport async function googleAdsensePolicyChecker(\n  input: GoogleAdsensePolicyCheckerInput\n): Promise<GoogleAdsensePolicyCheckerOutput> {\n  return googleAdsensePolicyCheckerFlow(input);\n}\n\nconst googleAdsensePolicyCheckerPrompt = ai.definePrompt({\n  name: 'googleAdsensePolicyCheckerPrompt',\n  input: {schema: GoogleAdsensePolicyCheckerInputSchema},\n  output: {schema: GoogleAdsensePolicyCheckerOutputSchema},\n  prompt: `You are an expert in Google AdSense content policies.\n\nYou will evaluate the provided content to determine if it adheres to Google AdSense policies. Provide a detailed reasoning for your determination, referencing specific policies where applicable.\n\nContent: {{{content}}}\n\nDetermine if the content adheres to Google Adsense policies, and provide a detailed explanation.\n\nOutput in JSON format:\n{\n  \"adherence\": true or false,\n  \"reasoning\": \"Explanation referencing specific Google Adsense policies.\"\n}\n`,\n});\n\nconst googleAdsensePolicyCheckerFlow = ai.defineFlow(\n  {\n    name: 'googleAdsensePolicyCheckerFlow',\n    inputSchema: GoogleAdsensePolicyCheckerInputSchema,\n    outputSchema: GoogleAdsensePolicyCheckerOutputSchema,\n  },\n  async input => {\n    const {output} = await googleAdsensePolicyCheckerPrompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":"AAAA,cAAc;;;;;;AAGd;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,wCAAwC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACrD,SAAS,uIAAA,CAAA,IAAC,CACP,MAAM,GACN,QAAQ,CAAC;AACd;AAKA,MAAM,yCAAyC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACtD,WAAW,uIAAA,CAAA,IAAC,CACT,OAAO,GACP,QAAQ,CACP;IAEJ,WAAW,uIAAA,CAAA,IAAC,CACT,MAAM,GACN,QAAQ,CACP;AAEN;AAKO,eAAe,uCAAwB,GAAxB,2BACpB,KAAsC;IAEtC,OAAO,+BAA+B;AACxC;AAEA,MAAM,mCAAmC,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IACvD,MAAM;IACN,OAAO;QAAC,QAAQ;IAAqC;IACrD,QAAQ;QAAC,QAAQ;IAAsC;IACvD,QAAQ,CAAC;;;;;;;;;;;;;AAaX,CAAC;AACD;AAEA,MAAM,iCAAiC,mHAAA,CAAA,KAAE,CAAC,UAAU,CAClD;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,iCAAiC;IACxD,OAAO;AACT;;;IAnCoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 308, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 365, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/fact-checker/FactCheckerClient.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/fact-checker/FactCheckerClient.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/fact-checker/FactCheckerClient.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA8S,GAC3U,4EACA","debugId":null}},
    {"offset": {"line": 379, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/fact-checker/FactCheckerClient.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/fact-checker/FactCheckerClient.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/fact-checker/FactCheckerClient.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA0R,GACvT,wDACA","debugId":null}},
    {"offset": {"line": 393, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 403, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/fact-checker/page.tsx"],"sourcesContent":["import FactCheckerClient from \"./FactCheckerClient\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\n\nexport const metadata = {\n  title: \"Fact Checker Tool - SVKFACTS\",\n  description: \"Check if your content adheres to Google AdSense policies using our AI-powered tool.\",\n};\n\nexport default function FactCheckerPage() {\n  return (\n    <main className=\"flex-grow container mx-auto px-4 py-8 sm:px-6 lg:px-8 fade-in-on-load\">\n      <Card className=\"max-w-2xl mx-auto shadow-xl\">\n        <CardHeader className=\"text-center\">\n          <CardTitle className=\"text-3xl sm:text-4xl font-headline text-primary\">AdSense Policy Checker</CardTitle>\n          <CardDescription className=\"font-body text-sm sm:text-base pt-2\">\n            Enter your content below to check its compliance with Google AdSense policies.\n            Our AI tool will provide an analysis and reasoning.\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <FactCheckerClient />\n        </CardContent>\n      </Card>\n    </main>\n  );\n}\n"],"names":[],"mappings":";;;;;AAAA;AACA;;;;AAEO,MAAM,WAAW;IACtB,OAAO;IACP,aAAa;AACf;AAEe,SAAS;IACtB,qBACE,8OAAC;QAAK,WAAU;kBACd,cAAA,8OAAC,gIAAA,CAAA,OAAI;YAAC,WAAU;;8BACd,8OAAC,gIAAA,CAAA,aAAU;oBAAC,WAAU;;sCACpB,8OAAC,gIAAA,CAAA,YAAS;4BAAC,WAAU;sCAAkD;;;;;;sCACvE,8OAAC,gIAAA,CAAA,kBAAe;4BAAC,WAAU;sCAAsC;;;;;;;;;;;;8BAKnE,8OAAC,gIAAA,CAAA,cAAW;8BACV,cAAA,8OAAC,mJAAA,CAAA,UAAiB;;;;;;;;;;;;;;;;;;;;;AAK5B","debugId":null}}]
}